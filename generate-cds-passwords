#!/usr/bin/env python3

import argparse
import os.path
import itertools
import icpcpwutils

parser = argparse.ArgumentParser(
    formatter_class=argparse.RawTextHelpFormatter,
    description='Generate passwords for the CDS\'es.')
parser.add_argument('-m', '--master-file', help='location to save the CDS master PDF to. Will not be generated if not set.', default='')
parser.add_argument('-f', '--footer-text', help='Text to put on the bottom of password sheets.', default='')
parser.add_argument('-b', '--banner-file', help='File to use as banner for password sheets.', default='')
parser.add_argument('cds_config_file', help='location of the configuration file to read server and account data from.')
parser.add_argument('cds_servers_dir', help='directory where the CDS server configs reside.')
parser.add_argument('sheet_file', help='location of PDF file to put the password sheets to.')

args = parser.parse_args()

if not os.path.isdir(args.cds_servers_dir):
    print(f'{args.cds_servers_dir} is not an existing directory, creating...')
    os.makedirs(args.cds_servers_dir, exist_ok=True)

cds_config = icpcpwutils.get_yaml_file_contests(args.cds_config_file)

accounts_per_cds = {}
for server in cds_config['servers']:
    accounts_per_cds[server['name']] = []

    cds_dir = f'{args.cds_servers_dir}/{server["name"]}/config'
    os.makedirs(cds_dir, exist_ok=True)

    for account in cds_config['accounts']:
        if not server['name'] in account['servers']:
            continue

        accounts_per_cds[server['name']].append({
            'server': server['name'],
            'url': server['url'],
            'username': account['username'],
            'password': icpcpwutils.generate_password(),
            'type': account['type'],
            'name': account.get('name', '-'),
        })

    account_data = [{
        'id': account.get('id', account['username']),
        'username': account['username'],
        'password': account['password'],
        'type': account['type'],
    } for account in accounts_per_cds[server['name']]]
    cds_accounts_file = f'{cds_dir}/accounts.yaml'
    icpcpwutils.write_yaml_file(cds_accounts_file, account_data)
    print(f'Accounts for CDS {server["name"]} written to {cds_accounts_file}')

sheet_variables = {
    'accounts': itertools.chain.from_iterable([accounts_per_cds[accounts] for accounts in accounts_per_cds]),
    'footer': args.footer_text,
}

if args.banner_file:
    sheet_variables['banner'] = os.path.abspath(args.banner_file)

icpcpwutils.generate_template_to_pdf(
    'cds-sheets-template.html',
    sheet_variables,
    args.sheet_file
)
print(f'Sheet file written to {args.sheet_file}')

if args.master_file:
    icpcpwutils.generate_template_to_pdf(
        'cds-master-template.html', {
            'date': icpcpwutils.today_formated(),
            'accounts': itertools.chain.from_iterable([accounts_per_cds[accounts] for accounts in accounts_per_cds])
        },
        args.master_file,
        orientation='Landscape'
    )
    print(f'Master file written to {args.master_file}')
